"""
Django settings for FRS project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import logging
import os

from debug_toolbar.settings import PANELS_DEFAULTS
from django.conf import settings
from django.utils.crypto import get_random_string

from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# Import secret key or generate new secret key
try:
    from .secret_key import *
except ImportError:
    # Generate Secret Key the same way django-admin's startproject does
    SETTINGS_DIR = os.path.abspath(os.path.dirname(__file__))
    SECRET_KEY_CHARS = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
    with open(os.path.join(SETTINGS_DIR, 'secret_key.py'), 'w') as f:
        f.write("SECRET_KEY = \"%s\"" % (get_random_string(50, SECRET_KEY_CHARS)))
    from .secret_key import *

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'haystack',
    'FRS',
    'TBAW',
    'util',
    'leaderboard',
    'leaderboard2',
    'polymorphic',
    'django_spaghetti',
    'tastypie',
    'annoying',
    'debug_toolbar',
    'django_extensions',
    'vcs_info_panel',
    'template_profiler_panel',
    'nplusone.ext.django',
    'dashing',
    'django_js_reverse',
    'django_mysql',
]

MIDDLEWARE_CLASSES = [
    'util.middlewares.ProcessExceptionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'nplusone.ext.django.middleware.NPlusOneMiddleware',
]

ROOT_URLCONF = 'FRS.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {  # If the Cached Loader ends up being an issue, just remove
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'FRS.context_processors.supported_years'
            ],
        },
    },
]

# Run caching Template Loader in prod
if not DEBUG:
    TEMPLATES[0]['OPTIONS']['loaders'] = \
        [
            ('django.template.loaders.cached.Loader', [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]),
        ]
    
WSGI_APPLICATION = 'FRS.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'FRS',
        'USER': 'FRS_user',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
        'CONN_MAX_AGE': 60,
        'OPTIONS': {
            'init_command': 'SET innodb_strict_mode=1',
            'charset': 'utf8mb4',
        },
        'TEST': {
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_unicode_ci',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DEBUG_TOOLBAR_PANELS = PANELS_DEFAULTS + [
    'vcs_info_panel.panels.GitInfoPanel',
    'template_profiler_panel.panels.template.TemplateProfilerPanel',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'static2')

# General settings
SUPPORTED_YEARS = list(range(2010, 2017))
LEADERBOARD_COUNT = 200

# For Elo/Trueskill system
import trueskill
DEFAULT_MU = 1500
DEFAULT_SIGMA = DEFAULT_MU / 3
DEFAULT_BETA = DEFAULT_SIGMA / 2
DEFAULT_TAU = DEFAULT_SIGMA / 10
DEFAULT_DRAW_PROBABILITY = 0.10
ELO_DECAY_ALPHA = 0.45
trueskill.setup(mu=DEFAULT_MU, sigma=DEFAULT_SIGMA, beta=DEFAULT_BETA, tau=DEFAULT_TAU, draw_probability=DEFAULT_DRAW_PROBABILITY, backend="mpmath")

# For model visualization at /plate/
SPAGHETTI_SAUCE = {
    'apps': ['TBAW'],
    'show_fields': False,
    'exclude': {'auth': ['user']}
}

# NPlusOne Logging
LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler'
        },
    },
    'loggers': {
        'nplusone': {
            'handlers': ['console'],
            'level': 'WARN',
        },
    },
}
LOGGING.update(settings.LOGGING)

NPLUSONE_LOGGER = logging.getLogger('nplusone')
NPLUSONE_LOG_LEVEL = logging.WARN

# Slow Tests Setup
TEST_RUNNER = 'django_slowtests.testrunner.DiscoverSlowestTestsRunner'
NUM_SLOW_TESTS = 10

# For API request logging
LOG_PATH = os.path.join(BASE_DIR, 'logs')
FILE_NUM = 1

INTERNAL_IPS = ('127.0.0.1',)

# TBA Details

TBA_API_HEADERS = {
    'X-TBA-App-Id' : 'frs:frs:1'
}

# Haystack

HAYSTACK_FUZZY_MIN_SIM = 0.2
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.solr_backend.SolrEngine',
        'URL': 'http://127.0.0.1:8983/solr'
        # ...or for multicore...
        # 'URL': 'http://127.0.0.1:8983/solr/mysite',
    },
}
