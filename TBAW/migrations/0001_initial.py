# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-10-20 03:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elo_mu', models.FloatField(default=1500)),
                ('elo_sigma', models.FloatField(default=500.0)),
            ],
        ),
        migrations.CreateModel(
            name='AllianceAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.PositiveSmallIntegerField(null=True)),
                ('elo_mu_pre', models.FloatField(null=True)),
                ('elo_mu_post', models.FloatField(null=True)),
                ('elo_sigma_pre', models.FloatField(null=True)),
                ('elo_sigma_post', models.FloatField(null=True)),
                ('alliance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.Alliance')),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('award_type', models.PositiveSmallIntegerField(choices=[(0, "Chairman's"), (1, 'Winner'), (2, 'Finalist'), (3, 'Woodie Flowers'), (4, "Dean's List"), (5, 'Volunteer'), (6, 'Founders'), (7, 'Bart Kamen Memorial'), (8, 'Make It Loud'), (9, 'Engineering Inspiration'), (10, 'Rookie All Star'), (11, 'Gracious Professionalism'), (12, 'Coopertition'), (13, 'Judges'), (14, 'Highest Rookie Seed'), (15, 'Rookie Inspiration'), (16, 'Industrial Design'), (17, 'Quality'), (18, 'Safety'), (19, 'Sportsmanship'), (20, 'Creativity'), (21, 'Engineering Excellence'), (22, 'Entrepreneurship'), (23, 'Excellence in Design'), (24, 'Excellence in Design (CAD)'), (25, 'Excellence in Design (Animation)'), (26, "Driving Tomorrow's Technology"), (27, 'Imagery'), (28, 'Media and Technology'), (29, 'Innovation in Control'), (30, 'Spirit'), (31, 'Website'), (32, 'Visualization'), (33, 'Autodesk Inventor'), (34, 'Future Innovator'), (35, 'Recognition of Extraordinary Service'), (36, 'Outstanding Cart'), (37, 'WSU Aim Higher'), (38, 'Leadership in Control'), (39, 'Number 1 Seed'), (40, 'Incredible Play'), (41, "People's Choice Animation"), (42, 'Rising Star Visualization'), (43, 'Best Offensive Round'), (44, 'Best Play of the Day'), (45, 'Featherweight in the Finals'), (46, 'Most Photogenic'), (47, 'Outstanding Defense'), (48, 'Power to Simplify'), (49, 'Against All Odds'), (50, 'Rising Star'), (51, "Chairman's Honorable Mention"), (52, 'Content Communication Honorable Mention'), (53, 'Technical Execution Honorable Mention'), (54, 'Realization'), (55, 'Realization Honorable Mention'), (56, 'Design Your Future'), (57, 'Design Your Future Honorable Mention'), (58, 'Special Recognition Character Animation'), (59, 'High Score'), (60, 'Teacher Pioneer'), (61, 'Best Craftsmanship'), (62, 'Best Defensive Match'), (63, 'Play of the Day'), (64, 'Programming'), (65, 'Professionalism'), (66, 'Golden Corndog'), (67, 'Most Improved Team'), (68, 'Wildcard')])),
                ('year', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=50, null=True)),
                ('event_code', models.CharField(max_length=7)),
                ('event_type', models.SmallIntegerField(choices=[(0, 'Regional'), (1, 'District'), (2, 'District Championship'), (3, 'Championship Division'), (4, 'Championship Finals'), (99, 'Offseason'), (100, 'Preseason'), (-1, 'Unlabeled')], null=True)),
                ('event_district', models.SmallIntegerField(choices=[(0, 'No District'), (1, 'Michigan'), (2, 'Mid-Atlantic'), (3, 'New England'), (4, 'Pacific Northwest'), (5, 'Indiana'), (6, 'Chesapeake'), (7, 'North Carolina'), (8, 'Georgia')], null=True)),
                ('year', models.PositiveSmallIntegerField()),
                ('location', models.CharField(max_length=50, null=True)),
                ('venue_address', models.TextField(null=True)),
                ('timezone', models.CharField(max_length=35, null=True)),
                ('website', models.URLField(null=True)),
                ('official', models.BooleanField()),
                ('end_date', models.DateField(null=True)),
                ('alliances', models.ManyToManyField(to='TBAW.Alliance')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=20)),
                ('comp_level', models.CharField(max_length=6)),
                ('set_number', models.CharField(max_length=20, null=True)),
                ('match_number', models.CharField(max_length=20)),
                ('alliances', models.ManyToManyField(to='TBAW.Alliance')),
                ('blue_alliance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blue_alliance', to='TBAW.Alliance')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TBAW.Event')),
                ('red_alliance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red_alliance', to='TBAW.Alliance')),
            ],
        ),
        migrations.CreateModel(
            name='RankingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField(null=True)),
                ('played', models.PositiveSmallIntegerField(null=True)),
                ('tba_opr', models.FloatField(null=True)),
                ('tba_dpr', models.FloatField(null=True)),
                ('tba_ccwms', models.FloatField(null=True)),
                ('elo_mu_pre', models.FloatField(default=0, null=True)),
                ('elo_mu_post', models.FloatField(default=0, null=True)),
                ('elo_sigma_pre', models.FloatField(default=0, null=True)),
                ('elo_sigma_post', models.FloatField(default=0, null=True)),
                ('qual_wins', models.PositiveSmallIntegerField(default=0)),
                ('qual_losses', models.PositiveSmallIntegerField(default=0)),
                ('qual_ties', models.PositiveSmallIntegerField(default=0)),
                ('total_wins', models.PositiveSmallIntegerField(default=0)),
                ('total_losses', models.PositiveSmallIntegerField(default=0)),
                ('total_ties', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=13, null=True)),
                ('year', models.PositiveSmallIntegerField(null=True)),
                ('name', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('red_total_score', models.SmallIntegerField(null=True)),
                ('blue_total_score', models.SmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(null=True)),
                ('name', models.TextField(null=True)),
                ('locality', models.CharField(max_length=50, null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('country_name', models.CharField(max_length=50, null=True)),
                ('location', models.CharField(max_length=150, null=True)),
                ('team_number', models.PositiveSmallIntegerField()),
                ('key', models.CharField(max_length=8)),
                ('nickname', models.CharField(max_length=100, null=True)),
                ('rookie_year', models.PositiveSmallIntegerField(null=True)),
                ('motto', models.TextField(null=True)),
                ('elo_mu', models.FloatField(default=1500)),
                ('elo_sigma', models.FloatField(default=500.0)),
                ('active_event_winstreak', models.PositiveSmallIntegerField(default=0)),
                ('longest_event_winstreak', models.PositiveSmallIntegerField(default=0)),
                ('event_wins_count', models.PositiveSmallIntegerField(default=0)),
                ('event_attended_count', models.PositiveSmallIntegerField(default=0)),
                ('event_winrate', models.FloatField(default=0.0)),
                ('match_wins_count', models.PositiveSmallIntegerField(default=0)),
                ('match_losses_count', models.PositiveSmallIntegerField(default=0)),
                ('match_ties_count', models.PositiveSmallIntegerField(default=0)),
                ('match_winrate', models.FloatField(default=0.0)),
                ('awards_count', models.PositiveSmallIntegerField(default=0)),
                ('blue_banners_count', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RankingModel2010',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('seeding_score', models.PositiveSmallIntegerField(null=True)),
                ('coopertition_bonus', models.PositiveSmallIntegerField(null=True)),
                ('hanging_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2011',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('qual_score', models.PositiveSmallIntegerField(null=True)),
                ('ranking_score', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2012',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('qual_score', models.PositiveSmallIntegerField(null=True)),
                ('auton_points', models.PositiveSmallIntegerField(null=True)),
                ('bridge_points', models.PositiveSmallIntegerField(null=True)),
                ('teleop_points', models.PositiveSmallIntegerField(null=True)),
                ('coopertition_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2013',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('qual_score', models.PositiveSmallIntegerField(null=True)),
                ('climb_points', models.PositiveSmallIntegerField(null=True)),
                ('auton_points', models.PositiveSmallIntegerField(null=True)),
                ('teleop_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2014',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('qual_score', models.PositiveSmallIntegerField(null=True)),
                ('assist_points', models.PositiveSmallIntegerField(null=True)),
                ('truss_catch_points', models.PositiveSmallIntegerField(null=True)),
                ('auton_points', models.PositiveSmallIntegerField(null=True)),
                ('teleop_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2015',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('qual_average', models.FloatField(null=True)),
                ('auton_points', models.PositiveSmallIntegerField(null=True)),
                ('container_points', models.PositiveSmallIntegerField(null=True)),
                ('coopertition_points', models.PositiveSmallIntegerField(null=True)),
                ('litter_points', models.PositiveSmallIntegerField(null=True)),
                ('tote_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='RankingModel2016',
            fields=[
                ('rankingmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.RankingModel')),
                ('ranking_score', models.PositiveSmallIntegerField(null=True)),
                ('auton_points', models.PositiveSmallIntegerField(null=True)),
                ('scale_challenge_points', models.PositiveSmallIntegerField(null=True)),
                ('goals_points', models.PositiveSmallIntegerField(null=True)),
                ('defense_points', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.rankingmodel',),
        ),
        migrations.CreateModel(
            name='ScoringModel2015',
            fields=[
                ('scoringmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.ScoringModel')),
                ('coopertition', models.TextField(max_length=7, null=True)),
                ('blue_tote_count_far', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_tote_count_near', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_tote_set', models.NullBooleanField(default=False)),
                ('blue_container_set', models.NullBooleanField(default=False)),
                ('blue_container_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_1', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_2', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_3', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_4', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_5', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_container_count_6', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_litter_count_unprocessed', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_litter_count_container', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_litter_count_landfill', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_litter_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_tote_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('blue_tote_stack', models.NullBooleanField(default=False)),
                ('blue_robot_set', models.NullBooleanField(default=False)),
                ('blue_auton_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_foul_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_foul_count', models.SmallIntegerField(default=0, null=True)),
                ('red_tote_count_far', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_tote_count_near', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_tote_set', models.NullBooleanField(default=False)),
                ('red_container_set', models.NullBooleanField(default=False)),
                ('red_container_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_1', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_2', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_3', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_4', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_5', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_container_count_6', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_litter_count_unprocessed', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_litter_count_container', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_litter_count_landfill', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_litter_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_tote_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('red_tote_stack', models.NullBooleanField(default=False)),
                ('red_robot_set', models.NullBooleanField(default=False)),
                ('red_auton_score', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_score', models.SmallIntegerField(default=0, null=True)),
                ('red_foul_score', models.SmallIntegerField(default=0, null=True)),
                ('red_foul_count', models.SmallIntegerField(default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.scoringmodel',),
        ),
        migrations.CreateModel(
            name='ScoringModel2016',
            fields=[
                ('scoringmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='TBAW.ScoringModel')),
                ('blue_adjust_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_auton_boulders_high', models.SmallIntegerField(default=0, null=True)),
                ('blue_auton_boulders_low', models.SmallIntegerField(default=0, null=True)),
                ('blue_auton_boulders_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_auton_crossing_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_auton_reach_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_breach_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_capture_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_defense1', models.CharField(default='', max_length=20, null=True)),
                ('blue_defense2', models.CharField(default='', max_length=20, null=True)),
                ('blue_defense3', models.CharField(default='', max_length=20, null=True)),
                ('blue_defense4', models.CharField(default='', max_length=20, null=True)),
                ('blue_defense1_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_defense2_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_defense3_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_defense4_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_defenses_breached', models.NullBooleanField(default=False)),
                ('blue_low_bar_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_robot1_auto', models.CharField(default='', max_length=20, null=True)),
                ('blue_robot2_auto', models.CharField(default='', max_length=20, null=True)),
                ('blue_robot3_auto', models.CharField(default='', max_length=20, null=True)),
                ('blue_scale_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_boulders_high', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_boulders_low', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_boulders_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_challenge_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_crossing_points', models.SmallIntegerField(default=0, null=True)),
                ('blue_tower_captured', models.NullBooleanField(default=False)),
                ('blue_tower_end_strength', models.SmallIntegerField(default=0, null=True)),
                ('blue_tower_faceA', models.CharField(default='', max_length=20, null=True)),
                ('blue_tower_faceB', models.CharField(default='', max_length=20, null=True)),
                ('blue_tower_faceC', models.CharField(default='', max_length=20, null=True)),
                ('blue_auton_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_teleop_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_foul_score', models.SmallIntegerField(default=0, null=True)),
                ('blue_foul_count', models.SmallIntegerField(default=0, null=True)),
                ('blue_tech_foul_count', models.SmallIntegerField(default=0, null=True)),
                ('red_adjust_points', models.SmallIntegerField(default=0, null=True)),
                ('red_auton_boulders_high', models.SmallIntegerField(default=0, null=True)),
                ('red_auton_boulders_low', models.SmallIntegerField(default=0, null=True)),
                ('red_auton_boulders_points', models.SmallIntegerField(default=0, null=True)),
                ('red_auton_crossing_points', models.SmallIntegerField(default=0, null=True)),
                ('red_auton_reach_points', models.SmallIntegerField(default=0, null=True)),
                ('red_breach_points', models.SmallIntegerField(default=0, null=True)),
                ('red_capture_points', models.SmallIntegerField(default=0, null=True)),
                ('red_defense1', models.CharField(default='', max_length=20, null=True)),
                ('red_defense2', models.CharField(default='', max_length=20, null=True)),
                ('red_defense3', models.CharField(default='', max_length=20, null=True)),
                ('red_defense4', models.CharField(default='', max_length=20, null=True)),
                ('red_defense1_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('red_defense2_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('red_defense3_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('red_defense4_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('red_defenses_breached', models.NullBooleanField(default=False)),
                ('red_low_bar_cross_count', models.SmallIntegerField(default=0, null=True)),
                ('red_robot1_auto', models.CharField(default='', max_length=20, null=True)),
                ('red_robot2_auto', models.CharField(default='', max_length=20, null=True)),
                ('red_robot3_auto', models.CharField(default='', max_length=20, null=True)),
                ('red_scale_points', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_boulders_high', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_boulders_low', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_boulders_points', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_challenge_points', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_crossing_points', models.SmallIntegerField(default=0, null=True)),
                ('red_tower_captured', models.NullBooleanField(default=False)),
                ('red_tower_end_strength', models.SmallIntegerField(default=0, null=True)),
                ('red_tower_faceA', models.CharField(default='', max_length=20, null=True)),
                ('red_tower_faceB', models.CharField(default='', max_length=20, null=True)),
                ('red_tower_faceC', models.CharField(default='', max_length=20, null=True)),
                ('red_auton_score', models.SmallIntegerField(default=0, null=True)),
                ('red_teleop_score', models.SmallIntegerField(default=0, null=True)),
                ('red_foul_score', models.SmallIntegerField(default=0, null=True)),
                ('red_foul_count', models.SmallIntegerField(default=0, null=True)),
                ('red_tech_foul_count', models.SmallIntegerField(default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('TBAW.scoringmodel',),
        ),
        migrations.AddField(
            model_name='scoringmodel',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_tbaw.scoringmodel_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='robot',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.Team'),
        ),
        migrations.AddField(
            model_name='rankingmodel',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.Event'),
        ),
        migrations.AddField(
            model_name='rankingmodel',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_tbaw.rankingmodel_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='rankingmodel',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='scoring_model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.ScoringModel'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='TBAW.Alliance'),
        ),
        migrations.AddField(
            model_name='event',
            name='teams',
            field=models.ManyToManyField(to='TBAW.Team'),
        ),
        migrations.AddField(
            model_name='event',
            name='winning_alliance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winning_alliance', to='TBAW.Alliance'),
        ),
        migrations.AddField(
            model_name='award',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TBAW.Event'),
        ),
        migrations.AddField(
            model_name='award',
            name='recipients',
            field=models.ManyToManyField(to='TBAW.Team'),
        ),
        migrations.AddField(
            model_name='allianceappearance',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TBAW.Event'),
        ),
        migrations.AddField(
            model_name='alliance',
            name='teams',
            field=models.ManyToManyField(to='TBAW.Team'),
        ),
    ]
